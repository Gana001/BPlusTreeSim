<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?eclipse.ant.import?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="BPlusTreeSim">
	<property environment="env" />
	<property name="ECLIPSE_HOME" value="/opt/eclipse" />
	<property name="junit.output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.7" />
	<property name="source" value="1.7" />
	<property name="projectHome" value="." />
	<path id="JUnit 4.libraryclasspath">
		<pathelement location="${ECLIPSE_HOME}/plugins/org.junit_4.11.0.v201303080030/junit.jar" />
		<pathelement location="${ECLIPSE_HOME}/plugins/org.hamcrest.core_1.3.0.v201303031735.jar" />
	</path>
	<path id="BPlusTreeSim.classpath">
		<pathelement location="target/classes" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>
	<target name="init">
		<mkdir dir="target/classes" />
		<copy includeemptydirs="false" todir="target/classes">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="target/classes" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">

		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
			<src path="src" />
			<classpath refid="BPlusTreeSim.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target name="APlusTreeTest">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="edu.ku.eecs.db.APlusTree.APlusTreeTest" todir="${junit.output.dir}" />
			<classpath refid="BPlusTreeSim.classpath" />
		</junit>
	</target>
	<target name="DiskTest">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="edu.ku.eecs.db.disk.DiskTest" todir="${junit.output.dir}" />
			<classpath refid="BPlusTreeSim.classpath" />
		</junit>
	</target>
	<target name="BPlusTreeSim">
		<java classname="edu.ku.eecs.db.BPlusTreeSim" failonerror="true" fork="yes">
			<arg line="input.txt" />
			<arg line="output.txt" />
			<classpath refid="BPlusTreeSim.classpath" />
		</java>
	</target>
	<target name="BPlusTreeSimTest">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="edu.ku.eecs.db.APlusTree.APlusTreeTest" todir="${junit.output.dir}" />
			<test name="edu.ku.eecs.db.disk.DiskTest" todir="${junit.output.dir}" />
			<test name="edu.ku.eecs.db.disk.PageTableTest" todir="${junit.output.dir}" />
			<test name="edu.ku.eecs.db.disk.PageTest" todir="${junit.output.dir}" />
			<classpath refid="BPlusTreeSim.classpath" />
		</junit>
	</target>
	<target name="BPlusTreeSimFileOut">
		<java classname="edu.ku.eecs.db.BPlusTreeSim" failonerror="true" fork="yes">
			<arg line="input.txt output.txt" />
			<classpath refid="BPlusTreeSim.classpath" />
		</java>
	</target>
	<target name="PageTest">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<test name="edu.ku.eecs.db.disk.PageTest" todir="${junit.output.dir}" />
			<classpath refid="BPlusTreeSim.classpath" />
		</junit>
	</target>
	<target name="junitreport">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>


</project>
